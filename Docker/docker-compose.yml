# connecting momgodb with mongo express image to link to node js app
version: '3.1'

services:
  mongo:
    image: mongo
    ports:
     - 27017:27017
    environment:
     - MONGO_INITDB_ROOT_USERNAME=admin
     - MONGO_INITDB_ROOT_PASSWORD=admin

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
     - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
     - ME_CONFIG_MONGODB_ADMINPASSWORD=adnin
     - ME_CONFIG_MONGODB_SERVER=mongo
volumes:
  mongo-data:
    driver: local

# To chech in browser
# mongo-express: ip:8080
# mongo-express: ip:27017

# deploy application in server by bringing all 3images togehther

# version: '3.1'

services:
  # pull the image u build earlier
  my-app: # create the image push it to a repo then pull it here
    image: ${docker-registry}/my-app:1.0 #repo domain/appname:tag
    ports:
    - 3000:3000 # port app is listening to
  mongo:
    image: mongo
    ports:
     - 27017:27017
    environment:
     - MONGO_INITDB_ROOT_USERNAME=admin
     - MONGO_INITDB_ROOT_PASSWORD=admin

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
     - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
     - ME_CONFIG_MONGODB_ADMINPASSWORD=adnin
     - ME_CONFIG_MONGODB_SERVER=mongo
volumes:
  mongo-data:
    driver: local
# tO RUN: docker-compose -f "config filename" up
# tO STOP: docker-compose -f "config filename" down

# To chech in browser
# mongo-express: ip:8080
# mongo-express: ip:27017